{"version":3,"sources":["components/layout/AppNavbar.js","components/helper/getDob.js","context.js","components/users/User.js","components/helper/giveColor.js","components/users/Users.js","components/users/Month.js","components/users/Months.js","App.js","serviceWorker.js","index.js"],"names":["AppNavbar","className","href","Component","getDOB","dob","Date","getMonth","getDate","birthDate","getFullYear","getDateForCompare","sortByDate","arr","sort","a","b","Context","React","createContext","Provider","state","users","january","february","march","april","may","june","july","august","september","october","november","december","months","name","id","fetch","then","res","json","data","setState","map","user","console","log","value","this","props","children","Consumer","User","showInfo","monthsName","onMouseEnter","onMouseLeave","firstName","lastName","color","month","style","padding","backgroundColor","cursor","borderRadius","position","top","right","textDecoration","textTransform","index","key","giveColor","length","forEach","giveColorToMonth","Users","zIndex","usersInMonth","Month","Fragment","display","marginBottom","textAlign","marginRight","left","width","listStyle","usersList","Months","flexWrap","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.6bc2d27b.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass AppNavbar extends Component {\r\n  render() {\r\n    return (\r\n      <nav className=\"navbar navbar-dark bg-success mb-4\">\r\n        <div className=\"container\">\r\n          <a href=\"#!\" className=\"navbar-brand\">\r\n            Users\r\n          </a>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AppNavbar;\r\n","export const getDOB = (dob) => {\r\n  const birthMonth = new Date(dob);\r\n  return birthMonth.getMonth();\r\n};\r\n\r\nexport const getDate = (dob) => {\r\n  const birthDate = new Date(dob);\r\n\r\n  return `${\r\n    birthDate.getDate() < 10 ? \"0\" + birthDate.getDate() : birthDate.getDate()\r\n  }.${\r\n    birthDate.getMonth() < 9\r\n      ? \"0\" + (birthDate.getMonth() + 1)\r\n      : birthDate.getMonth() + 1\r\n  }.${birthDate.getFullYear()}`;\r\n};\r\n\r\nconst getDateForCompare = (dob) => {\r\n  const birthDate = new Date(dob);\r\n\r\n  return birthDate.getDate();\r\n};\r\n\r\nexport const sortByDate = (arr) => {\r\n  return arr.sort((a, b) =>\r\n    getDateForCompare(a.dob) > getDateForCompare(b.dob) ? 1 : -1\r\n  );\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { getDOB } from \"./components/helper/getDob\";\r\n\r\nconst Context = React.createContext();\r\n\r\nexport class Provider extends Component {\r\n  state = {\r\n    users: [],\r\n    january: [],\r\n    february: [],\r\n    march: [],\r\n    april: [],\r\n    may: [],\r\n    june: [],\r\n    july: [],\r\n    august: [],\r\n    september: [],\r\n    october: [],\r\n    november: [],\r\n    december: [],\r\n    months: [\r\n      { name: \"january\", id: 0 },\r\n      { name: \"february\", id: 1 },\r\n      { name: \"march\", id: 2 },\r\n      { name: \"april\", id: 3 },\r\n      { name: \"may\", id: 4 },\r\n      { name: \"june\", id: 5 },\r\n      { name: \"july\", id: 6 },\r\n      { name: \"august\", id: 7 },\r\n      { name: \"september\", id: 8 },\r\n      { name: \"october\", id: 9 },\r\n      { name: \"november\", id: 10 },\r\n      { name: \"december\", id: 11 },\r\n    ],\r\n  };\r\n  componentDidMount() {\r\n    fetch(\"https://yalantis-react-school-api.yalantis.com/api/task0/users\")\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        this.setState({ users: data });\r\n        data.map((user) => {\r\n          switch (getDOB(user.dob)) {\r\n            case 0:\r\n              this.setState({\r\n                january: [user, ...this.state.january],\r\n              });\r\n              break;\r\n            case 1:\r\n              this.setState({\r\n                february: [user, ...this.state.february],\r\n              });\r\n              break;\r\n            case 2:\r\n              this.setState({\r\n                march: [user, ...this.state.march],\r\n              });\r\n              break;\r\n            case 3:\r\n              this.setState({\r\n                april: [user, ...this.state.april],\r\n              });\r\n              break;\r\n            case 4:\r\n              this.setState({\r\n                may: [user, ...this.state.may],\r\n              });\r\n              break;\r\n            case 5:\r\n              this.setState({\r\n                june: [user, ...this.state.june],\r\n              });\r\n              break;\r\n            case 6:\r\n              this.setState({\r\n                july: [user, ...this.state.july],\r\n              });\r\n              break;\r\n            case 7:\r\n              this.setState({\r\n                august: [user, ...this.state.august],\r\n              });\r\n              break;\r\n            case 8:\r\n              this.setState({\r\n                september: [user, ...this.state.september],\r\n              });\r\n              break;\r\n            case 9:\r\n              this.setState({\r\n                october: [user, ...this.state.october],\r\n              });\r\n              break;\r\n            case 10:\r\n              this.setState({\r\n                november: [user, ...this.state.november],\r\n              });\r\n              break;\r\n            case 11:\r\n              this.setState({\r\n                december: [user, ...this.state.december],\r\n              });\r\n              break;\r\n            default:\r\n              console.log(\"Wrong number of month\");\r\n              break;\r\n          }\r\n        });\r\n      });\r\n  }\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { getDOB, sortByDate, getDate } from \"../helper/getDob\";\r\nimport { Consumer } from \"../../context\";\r\n\r\nclass User extends Component {\r\n  state = {\r\n    showInfo: false,\r\n    monthsName: [\r\n      \"january\",\r\n      \"february\",\r\n      \"march\",\r\n      \"april\",\r\n      \"may\",\r\n      \"june\",\r\n      \"july\",\r\n      \"august\",\r\n      \"september\",\r\n      \"october\",\r\n      \"november\",\r\n      \"december\",\r\n    ],\r\n  };\r\n\r\n  onMouseEnter = () => {\r\n    this.setState({ showInfo: true });\r\n  };\r\n  onMouseLeave = () => {\r\n    this.setState({ showInfo: false });\r\n  };\r\n  render() {\r\n    const { firstName, lastName, dob, color } = this.props.user;\r\n    const { monthsName, showInfo } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const {\r\n            january,\r\n            february,\r\n            march,\r\n            april,\r\n            may,\r\n            june,\r\n            july,\r\n            august,\r\n            september,\r\n            october,\r\n            november,\r\n            december,\r\n          } = value;\r\n\r\n          const usersList = (month) => {\r\n            if (month === 0) {\r\n              return sortByDate(january).map((user, index) => (\r\n                <li key={index}>\r\n                  {user.firstName} {user.lastName} - {getDate(user.dob)}\r\n                </li>\r\n              ));\r\n            } else if (month === 1) {\r\n              return sortByDate(february).map((user, index) => (\r\n                <li key={index}>\r\n                  {user.firstName} {user.lastName} - {getDate(user.dob)}\r\n                </li>\r\n              ));\r\n            } else if (month === 2) {\r\n              return sortByDate(march).map((user, index) => (\r\n                <li key={index}>\r\n                  {user.firstName} {user.lastName} - {getDate(user.dob)}\r\n                </li>\r\n              ));\r\n            } else if (month === 3) {\r\n              return sortByDate(april).map((user, index) => (\r\n                <li key={index}>\r\n                  {user.firstName} {user.lastName} - {getDate(user.dob)}\r\n                </li>\r\n              ));\r\n            } else if (month === 4) {\r\n              return sortByDate(may).map((user, index) => (\r\n                <li key={index}>\r\n                  {user.firstName} {user.lastName} - {getDate(user.dob)}\r\n                </li>\r\n              ));\r\n            } else if (month === 5) {\r\n              return sortByDate(june).map((user, index) => (\r\n                <li key={index}>\r\n                  {user.firstName} {user.lastName} - {getDate(user.dob)}\r\n                </li>\r\n              ));\r\n            } else if (month === 6) {\r\n              return sortByDate(july).map((user, index) => (\r\n                <li key={index}>\r\n                  {user.firstName} {user.lastName} - {getDate(user.dob)}\r\n                </li>\r\n              ));\r\n            } else if (month === 7) {\r\n              return sortByDate(august).map((user, index) => (\r\n                <li key={index}>\r\n                  {user.firstName} {user.lastName} - {getDate(user.dob)}\r\n                </li>\r\n              ));\r\n            } else if (month === 8) {\r\n              return sortByDate(september).map((user, index) => (\r\n                <li key={index}>\r\n                  {user.firstName} {user.lastName} - {getDate(user.dob)}\r\n                </li>\r\n              ));\r\n            } else if (month === 9) {\r\n              return sortByDate(october).map((user, index) => (\r\n                <li key={index}>\r\n                  {user.firstName} {user.lastName} - {getDate(user.dob)}\r\n                </li>\r\n              ));\r\n            } else if (month === 10) {\r\n              return sortByDate(november).map((user, index) => (\r\n                <li key={index}>\r\n                  {user.firstName} {user.lastName} - {getDate(user.dob)}\r\n                </li>\r\n              ));\r\n            } else if (month === 11) {\r\n              return sortByDate(december).map((user, index) => (\r\n                <li key={index}>\r\n                  {user.firstName} {user.lastName} - {getDate(user.dob)}\r\n                </li>\r\n              ));\r\n            }\r\n          };\r\n\r\n          return (\r\n            <tr>\r\n              <td>\r\n                {firstName} {lastName}\r\n              </td>\r\n              <td>\r\n                <span\r\n                  style={{\r\n                    padding: \"3px 8px\",\r\n                    backgroundColor: color,\r\n                    cursor: \"pointer\",\r\n                    borderRadius: \"4px\",\r\n                    color: \"#fff\",\r\n                    position: \"relative\",\r\n                  }}\r\n                  onMouseEnter={this.onMouseEnter}\r\n                  onMouseLeave={this.onMouseLeave}\r\n                >\r\n                  {monthsName[getDOB(dob)]}\r\n                </span>\r\n                {showInfo ? (\r\n                  <ul\r\n                    style={{\r\n                      position: \"fixed\",\r\n                      top: \"120px\",\r\n                      right: \"50%\",\r\n                      backgroundColor: \"grey\",\r\n                      color: \"#fff\",\r\n                      padding: \"10px\",\r\n                      borderRadius: \"10px\",\r\n                    }}\r\n                  >\r\n                    <span\r\n                      style={{\r\n                        textDecoration: \"underline\",\r\n                        textTransform: \"uppercase\",\r\n                      }}\r\n                    >\r\n                      {monthsName[getDOB(dob)]}\r\n                    </span>\r\n                    {usersList(getDOB(dob))}\r\n                  </ul>\r\n                ) : null}\r\n              </td>\r\n            </tr>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nUser.propTypes = {\r\n  user: PropTypes.object.isRequired,\r\n};\r\nexport default User;\r\n","export const giveColor = (arr) => {\r\n  if (arr.length >= 0 && arr.length <= 2) {\r\n    arr.forEach((user) => (user.color = \"grey\"));\r\n  }\r\n  if (arr.length >= 3 && arr.length <= 6) {\r\n    arr.forEach((user) => (user.color = \"blue\"));\r\n  }\r\n  if (arr.length >= 7 && arr.length <= 10) {\r\n    arr.forEach((user) => (user.color = \"green\"));\r\n  }\r\n  if (arr.length >= 11) {\r\n    arr.forEach((user) => (user.color = \"red\"));\r\n  }\r\n};\r\nexport const giveColorToMonth = (arr, month) => {\r\n  if (arr.length >= 0 && arr.length <= 2) {\r\n    month.color = \"grey\";\r\n  }\r\n  if (arr.length >= 3 && arr.length <= 6) {\r\n    month.color = \"blue\";\r\n  }\r\n  if (arr.length >= 7 && arr.length <= 10) {\r\n    month.color = \"green\";\r\n  }\r\n  if (arr.length >= 11) {\r\n    month.color = \"red\";\r\n  }\r\n};\r\n","import React, { Component } from \"react\";\r\nimport User from \"./User\";\r\nimport { giveColor } from \"../helper/giveColor\";\r\nimport { Consumer } from \"../../context\";\r\n\r\nclass Users extends Component {\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const { users } = value;\r\n          giveColor(value.january);\r\n          giveColor(value.february);\r\n          giveColor(value.march);\r\n          giveColor(value.april);\r\n          giveColor(value.may);\r\n          giveColor(value.june);\r\n          giveColor(value.july);\r\n          giveColor(value.august);\r\n          giveColor(value.september);\r\n          giveColor(value.november);\r\n          giveColor(value.october);\r\n          giveColor(value.december);\r\n          return (\r\n            <div\r\n              className=\"card card-body mb-3\"\r\n              style={{ position: \"relative\", zIndex: \"0\" }}\r\n            >\r\n              <table className=\"table table-striped\">\r\n                <thead className=\"thead\">\r\n                  <tr>\r\n                    <th>Name</th>\r\n                    <th>Date of birth</th>\r\n                    <th />\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {users.map((user) => (\r\n                    <User key={user.id} user={user} usersInMonth={value} />\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Users;\r\n","import React from \"react\";\r\nimport { Consumer } from \"../../context\";\r\n\r\nimport { getDOB, sortByDate, getDate } from \"../helper/getDob\";\r\n\r\nexport default class Month extends React.Component {\r\n  state = {\r\n    showInfo: false,\r\n    monthsName: [\r\n      \"january\",\r\n      \"february\",\r\n      \"march\",\r\n      \"april\",\r\n      \"may\",\r\n      \"june\",\r\n      \"july\",\r\n      \"august\",\r\n      \"september\",\r\n      \"october\",\r\n      \"november\",\r\n      \"december\",\r\n    ],\r\n  };\r\n\r\n  onMouseEnter = () => {\r\n    this.setState({ showInfo: true });\r\n  };\r\n  onMouseLeave = () => {\r\n    this.setState({ showInfo: false });\r\n  };\r\n  render() {\r\n    const { showInfo, monthsName } = this.state;\r\n    const { month } = this.props;\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const {\r\n            january,\r\n            february,\r\n            march,\r\n            april,\r\n            may,\r\n            june,\r\n            july,\r\n            august,\r\n            september,\r\n            october,\r\n            november,\r\n            december,\r\n          } = value;\r\n\r\n          const usersList = (month) => {\r\n            if (month === 0) {\r\n              return sortByDate(january).map((user, index) => (\r\n                <li key={index}>\r\n                  {user.firstName} {user.lastName} - {getDate(user.dob)}\r\n                </li>\r\n              ));\r\n            } else if (month === 1) {\r\n              return sortByDate(february).map((user, index) => (\r\n                <li key={index}>\r\n                  {user.firstName} {user.lastName} - {getDate(user.dob)}\r\n                </li>\r\n              ));\r\n            } else if (month === 2) {\r\n              return sortByDate(march).map((user, index) => (\r\n                <li key={index}>\r\n                  {user.firstName} {user.lastName} - {getDate(user.dob)}\r\n                </li>\r\n              ));\r\n            } else if (month === 3) {\r\n              return sortByDate(april).map((user, index) => (\r\n                <li key={index}>\r\n                  {user.firstName} {user.lastName} - {getDate(user.dob)}\r\n                </li>\r\n              ));\r\n            } else if (month === 4) {\r\n              return sortByDate(may).map((user, index) => (\r\n                <li key={index}>\r\n                  {user.firstName} {user.lastName} - {getDate(user.dob)}\r\n                </li>\r\n              ));\r\n            } else if (month === 5) {\r\n              return sortByDate(june).map((user, index) => (\r\n                <li key={index}>\r\n                  {user.firstName} {user.lastName} - {getDate(user.dob)}\r\n                </li>\r\n              ));\r\n            } else if (month === 6) {\r\n              return sortByDate(july).map((user, index) => (\r\n                <li key={index}>\r\n                  {user.firstName} {user.lastName} - {getDate(user.dob)}\r\n                </li>\r\n              ));\r\n            } else if (month === 7) {\r\n              return sortByDate(august).map((user, index) => (\r\n                <li key={index}>\r\n                  {user.firstName} {user.lastName} - {getDate(user.dob)}\r\n                </li>\r\n              ));\r\n            } else if (month === 8) {\r\n              return sortByDate(september).map((user, index) => (\r\n                <li key={index}>\r\n                  {user.firstName} {user.lastName} - {getDate(user.dob)}\r\n                </li>\r\n              ));\r\n            } else if (month === 9) {\r\n              return sortByDate(october).map((user, index) => (\r\n                <li key={index}>\r\n                  {user.firstName} {user.lastName} - {getDate(user.dob)}\r\n                </li>\r\n              ));\r\n            } else if (month === 10) {\r\n              return sortByDate(november).map((user, index) => (\r\n                <li key={index}>\r\n                  {user.firstName} {user.lastName} - {getDate(user.dob)}\r\n                </li>\r\n              ));\r\n            } else if (month === 11) {\r\n              return sortByDate(december).map((user, index) => (\r\n                <li key={index}>\r\n                  {user.firstName} {user.lastName} - {getDate(user.dob)}\r\n                </li>\r\n              ));\r\n            }\r\n          };\r\n          return (\r\n            <React.Fragment>\r\n              <ul className=\"mb-3 \" style={{ display: \"flex\" }}>\r\n                <li\r\n                  style={{\r\n                    backgroundColor: month.color,\r\n                    padding: \"2px 8px\",\r\n                    borderRadius: \"3px\",\r\n                    cursor: \"pointer\",\r\n                    marginBottom: \"3px\",\r\n                    textAlign: \"center\",\r\n                    color: \"#fff\",\r\n                    marginRight: \"4px\",\r\n                  }}\r\n                  onMouseEnter={this.onMouseEnter}\r\n                  onMouseLeave={this.onMouseLeave}\r\n                >\r\n                  {month.name}\r\n                  {showInfo ? (\r\n                    <ul\r\n                      style={{\r\n                        position: \"absolute\",\r\n                        top: \"25px\",\r\n                        left: \"30%\",\r\n                        width: \"300px\",\r\n                        zIndex: \"1\",\r\n                        backgroundColor: \"grey\",\r\n                        color: \"#fff\",\r\n                        padding: \"10px\",\r\n                        borderRadius: \"10px\",\r\n                        listStyle: \"none\",\r\n                      }}\r\n                    >\r\n                      <li\r\n                        style={{\r\n                          textDecoration: \"underline\",\r\n                          textTransform: \"uppercase\",\r\n                        }}\r\n                      >\r\n                        {monthsName[month.id]}\r\n                      </li>\r\n                      {usersList(month.id)}\r\n                    </ul>\r\n                  ) : null}\r\n                </li>\r\n              </ul>\r\n            </React.Fragment>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../context\";\r\nimport { giveColorToMonth } from \"../helper/giveColor\";\r\n\r\nimport Month from \"./Month\";\r\n\r\nexport default class Months extends Component {\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const { months } = value;\r\n          giveColorToMonth(value.january, months[0]);\r\n          giveColorToMonth(value.february, months[1]);\r\n          giveColorToMonth(value.march, months[2]);\r\n          giveColorToMonth(value.april, months[3]);\r\n          giveColorToMonth(value.may, months[4]);\r\n          giveColorToMonth(value.june, months[5]);\r\n          giveColorToMonth(value.july, months[6]);\r\n          giveColorToMonth(value.august, months[7]);\r\n          giveColorToMonth(value.september, months[8]);\r\n          giveColorToMonth(value.november, months[9]);\r\n          giveColorToMonth(value.october, months[10]);\r\n          giveColorToMonth(value.december, months[11]);\r\n\r\n          return (\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                flexWrap: \"wrap\",\r\n                position: \"relative\",\r\n              }}\r\n            >\r\n              {months.map((month) => (\r\n                <Month key={month.id} month={month} />\r\n              ))}\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\nimport AppNavbar from \"./components/layout/AppNavbar\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"font-awesome/css/font-awesome.min.css\";\nimport Users from \"./components/users/Users\";\n\nimport { Provider } from \"./context\";\nimport Months from \"./components/users/Months\";\n\nfunction App() {\n  return (\n    <Provider>\n      <div className=\"App\">\n        <AppNavbar />\n\n        <div className=\"container\">\n          <Months />\n          <Users />\n        </div>\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}